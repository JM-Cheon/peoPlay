<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.peoplay.Community.model.dao.NoticeMapper">
	<resultMap id="NoticeListMap" type="com.cctv.peoplay.Community.model.dto.NoticeDTO">
		<id column="NTC_NO" property="ntcNo" />
		<result column="USER_NO" property="userNo" />
		<result column="NTC_TITLE" property="ntcTitle" />
		<result column="NTC_CONTENT" property="ntcContent"/>
		<result column="NTC_DRAWUP_DATE" property="ntcDrawipDate" />
		<result column="NTC_WATCHED" property="ntcWatched" />
		<result column="NTC_STATUS" property="ntcstatus" />
		<association property="writer" javaType="com.cctv.peoplay.member.model.dto.MemberDTO">
			<id property="userNo" column="USER_NO"/>
			<result property="nickname" column="NICKNAME"/>
		</association>
	</resultMap>
	
	<!-- 페이징 처리를 위한 전체 게시물 수 조회용 메소드 -->
	<select id="count" resultType="int">
		SELECT 	
	           COUNT(*)
	      FROM NOTICE A
	     WHERE A.NTC_STATUS = 'Y'
	</select>
	
	<!-- 게시판 리스트 + 페이징 처리 -->
	<select id="ntclist" resultMap="NoticeListMap">
			SELECT 		
		       A.NTC_NO
		     , A.USER_NO
		     , A.NTC_TITLE
		     , A.NTC_CONTENT
		     , A.NTC_DRAWUP_DATE
		     , A.NTC_WATCHED
		     , A.NTC_STATUS
             , A.NICKNAME
		  FROM (SELECT ROWNUM RNUM
		  			 , B.NTC_NO
				     , B.USER_NO
				     , B.NTC_TITLE
				     , B.NTC_CONTENT
				     , B.NTC_DRAWUP_DATE
				     , B.NTC_WATCHED
				     , B.NTC_STATUS
		             , B.NICKNAME
		  		  FROM (SELECT  C.NTC_NO
						      , C.USER_NO
						      , C.NTC_TITLE
						      , C.NTC_CONTENT
						      , C.NTC_DRAWUP_DATE
						      , C.NTC_WATCHED
						      , C.NTC_STATUS
				              , D.NICKNAME
		  		  		  FROM NOTICE C
		  		  		  JOIN USER_INFO D ON(C.USER_NO = D.USER_NO)
		  		  		 WHERE C.NTC_STATUS = 'Y'
		  		  		 ORDER BY C.NTC_NO DESC
		  		  		 
		  		       ) B
		       ) A
		 WHERE A.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 게시판 검색 결과 갯수 -->
	<select id="searchCount" resultType="int" parameterType="hashmap">
		SELECT 	
	           COUNT(*)
	      FROM NOTICE A
	       JOIN USER_INFO B ON (A.USER_NO = B.USER_NO)
	     WHERE A.NTC_STATUS = 'Y'
	      <include refid="search"/>
	</select>
	
	<!-- 게시판 검색 결과 조회용 -->
	<select id="searchlist" resultMap="NoticeListMap" parameterType="hashmap">
		SELECT 		
		       A.NTC_NO
		     , A.USER_NO
		     , A.NTC_TITLE
		     , A.NTC_CONTENT
		     , A.NTC_DRAWUP_DATE
		     , A.NTC_WATCHED
		     , A.NTC_STATUS
             , A.NICKNAME
		  FROM (SELECT ROWNUM RNUM
		  			 , B.NTC_NO
				     , B.USER_NO
				     , B.NTC_TITLE
				     , B.NTC_CONTENT
				     , B.NTC_DRAWUP_DATE
				     , B.NTC_WATCHED
				     , B.NTC_STATUS
		             , B.NICKNAME
		  		  FROM (SELECT  C.NTC_NO
						      , C.USER_NO
						      , C.NTC_TITLE
						      , C.NTC_CONTENT
						      , C.NTC_DRAWUP_DATE
						      , C.NTC_WATCHED
						      , C.NTC_STATUS
				              , D.NICKNAME
		  		  		  FROM NOTICE C
		  		  		  JOIN USER_INFO D ON(C.USER_NO = D.USER_NO)
		  		  		 WHERE C.NTC_STATUS = 'Y'
			 			<include refid="search"/>
		  		  		 ORDER BY C.NTC_NO DESC
		  		       ) B
		       ) A
		 WHERE A.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	
	<sql id="search">
	
			<if test="searchCondition == 'writer'">
				AND NICKNAME LIKE '%'|| #{searchValue} ||'%'
		 	</if>
		 	 <if test="searchCondition == 'ntcTitle'">
				AND NTC_TITLE LIKE '%'|| #{searchValue} ||'%'
			</if>
			<if test="searchCondition == 'ntcContent'">
				AND NTC_CONTENT LIKE '%'|| #{searchValue} ||'%'
			</if>  
	</sql>
	
	<!-- 게시판 상세페이지 -->
	<select id="ntcdetail" resultMap="NoticeListMap">
		SELECT 
		       A.NTC_NO
		     , A.USER_NO
		     , A.NTC_TITLE
		     , A.NTC_CONTENT
		     , A.NTC_DRAWUP_DATE
		     , A.NTC_WATCHED
		     , A.NTC_STATUS
             , B.NICKNAME
		  FROM NOTICE A
          JOIN USER_INFO B ON(A.USER_NO = B.USER_NO)
		 WHERE A.NTC_STATUS = 'Y'
		   AND A.NTC_NO = #{ ntcNo }
	</select>
	
	<!-- 글작성 인서트 -->
	<insert id="insertNotice">
		INSERT 
		  INTO NOTICE 
	    (
	    NTC_NO
	    ,USER_NO
	    ,NTC_TITLE
	    ,NTC_CONTENT
	    ,NTC_DRAWUP_DATE
	    ,NTC_WATCHED
	    ,NTC_STATUS
	    )
	    VALUES
	    (
	    SEQ_NTC_NO.NEXTVAL
	    , #{ userNo }
	    , #{ ntcTitle }
	    , #{ ntcContent }
	    , SYSDATE
	    , #{ ntcWatched }
	    , DEFAULT
	    )
	</insert>
	
	<!-- 상세페이지 - 수정하기 -->
	<update id="updateWrite" parameterType="com.cctv.peoplay.Community.model.dto.NoticeDTO">
	    UPDATE NOTICE A
		   SET A.NTC_TITLE = #{ ntcTitle }
		     , A.NTC_CONTENT = #{ ntcContent }
		 WHERE NTC_STATUS = 'Y'
		   AND NTC_NO = #{ ntcNo }
	</update>
	<!-- 상세페이지 + 조회수 증가 -->
	<update id="ntcdetailCount" parameterType="int">
		UPDATE 	
	           NOTICE A
	       SET A.NTC_WATCHED = (SELECT B.NTC_WATCHED
                                   FROM NOTICE B
                                  WHERE NTC_NO = #{ntcNo}
                                ) + 1
         WHERE A.NTC_NO = #{ntcNo}
	</update>
	
	<!-- 게시글 삭제(업데이트) -->
	<update id="noticeDelete" parameterType="int">
		UPDATE 	
		       NOTICE A
		   SET A.NTC_STATUS = 'N'
		 WHERE A.NTC_STATUS = 'Y'
		   AND A.NTC_NO = #{ ntcNo }
	</update>
</mapper>