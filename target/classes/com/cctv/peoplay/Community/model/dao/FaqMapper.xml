<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.peoplay.Community.model.dao.FaqMapper">
	<resultMap id="FaqListMap" type="com.cctv.peoplay.Community.model.dto.FaqDTO">
		<id column="FAQ_NO" property="faqNo" />
		<result column="USER_NO" property="userNo" />
		<result column="FAQ_TITLE" property="faqTitle" />
		<result column="FAQ_CONTENT" property="faqContent" />
		<result column="FAQ_DRAWUP_DATE" property="faqDrawupDate" />
		<result column="FAQ_WATCHED" property="faqWatched" />
		<result column="FAQ_STATUS" property="faqStatus" />
	</resultMap>
	<!-- 페이징 처리를 위한 전체 게시물 수 조회용 메소드 -->
	<select id="count" resultType="int">
		SELECT 	
	           COUNT(*)
	      FROM FAQ A
	     WHERE A.FAQ_STATUS = 'Y'
	</select>
	
	<!-- 게시판 리스트 + 페이징 처리 -->
	<select id="faqList" resultMap="FaqListMap">
			SELECT 		
		       A.FAQ_NO
		     , A.USER_NO
		     , A.FAQ_TITLE
		     , A.FAQ_CONTENT
		     , A.FAQ_DRAWUP_DATE
		     , A.FAQ_WATCHED
		     , A.FAQ_STATUS
		  FROM (SELECT ROWNUM RNUM
		  			 , B.FAQ_NO
				     , B.USER_NO
				     , B.FAQ_TITLE
				     , B.FAQ_CONTENT
				     , B.FAQ_DRAWUP_DATE
				     , B.FAQ_WATCHED
				     , B.FAQ_STATUS
		  		  FROM (SELECT  C.FAQ_NO
						      , C.USER_NO
						      , C.FAQ_TITLE
						      , C.FAQ_CONTENT
						      , C.FAQ_DRAWUP_DATE
						      , C.FAQ_WATCHED
						      , C.FAQ_STATUS
		  		  		  FROM FAQ C
		  		  		 WHERE C.FAQ_STATUS = 'Y'
		  		       ) B
		       ) A
		 WHERE A.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 게시판 검색 결과 갯수 -->
	<select id="searchCount" resultType="int" parameterType="hashmap">
		SELECT 	
	           COUNT(*)
	      FROM FAQ A
	     WHERE A.FAQ_STATUS = 'Y'
	      <include refid="search"/>
	       
	     
	</select>
	
	<!-- 게시판 검색 결과 조회용 -->
	<select id="searchlist" resultMap="FaqListMap" parameterType="hashmap">
		SELECT 		
		       A.FAQ_NO
		     , A.USER_NO
		     , A.FAQ_TITLE
		     , A.FAQ_CONTENT
		     , A.FAQ_DRAWUP_DATE
		     , A.FAQ_WATCHED
		     , A.FAQ_STATUS
		  FROM (SELECT ROWNUM RNUM
		  			 , B.FAQ_NO
				     , B.USER_NO
				     , B.FAQ_TITLE
				     , B.FAQ_CONTENT
				     , B.FAQ_DRAWUP_DATE
				     , B.FAQ_WATCHED
				     , B.FAQ_STATUS
		  		  FROM (SELECT  C.FAQ_NO
						      , C.USER_NO
						      , C.FAQ_TITLE
						      , C.FAQ_CONTENT
						      , C.FAQ_DRAWUP_DATE
						      , C.FAQ_WATCHED
						      , C.FAQ_STATUS
		  		  		  FROM FAQ C
		  		  		 WHERE C.FAQ_STATUS = 'Y'
			 			<include refid="search"/>
		  		  		 ORDER BY C.FAQ_NO DESC
		  		       ) B
		       ) A
		 WHERE A.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	
	<sql id="search">
		 	 <if test="searchCondition == 'faqTitle'">
				AND FAQ_TITLE LIKE '%'|| #{searchValue} ||'%'
			</if>
			<if test="searchCondition == 'faqContent'">
				AND FAQ_CONTENT LIKE '%'|| #{searchValue} ||'%'
			</if>  
	</sql>

	<!-- 게시판 상세페이지 -->
	<select id="FaqDetail" resultMap="FaqListMap">
		SELECT 
		       A.FAQ_NO
		     , A.USER_NO
		     , A.FAQ_TITLE
		     , A.FAQ_CONTENT
		     , A.FAQ_DRAWUP_DATE
		     , A.FAQ_STATUS
		  FROM FAQ A
          JOIN USER_INFO B ON(A.USER_NO = B.USER_NO)
		 WHERE A.FAQ_STATUS = 'Y'
		   AND A.FAQ_NO = #{ faqNo }
	</select>
	
	<!-- 글작성 인서트 -->
	<insert id="insertFaq">
		INSERT 
		  INTO FAQ 
	    (
	    FAQ_NO
	    ,USER_NO
	    ,FAQ_TITLE
	    ,FAQ_CONTENT
	    ,FAQ_DRAWUP_DATE
	    ,FAQ_STATUS
	    )
	    VALUES
	    (
	    SEQ_FAQ_NO.NEXTVAL
	    , #{ userNo }
	    , #{ faqTitle }
	    , #{ faqContent }
	    , SYSDATE
	    , DEFAULT
	    )
	</insert>
	
	<!-- 상세페이지 - 수정하기 -->
	<update id="updateWrite" parameterType="com.cctv.peoplay.Community.model.dto.FaqDTO">
	    UPDATE FAQ A
		   SET A.FAQ_TITLE = #{ faqTitle }
		     , A.FAQ_CONTENT = #{ faqContent }
		 WHERE FAQ_STATUS = 'Y'
		   AND FAQ_NO = #{ faqNo }
	</update>
	
	<!-- 게시글 삭제(업데이트) -->
	<update id="faqDelete" parameterType="int">
		UPDATE 	
		       FAQ A
		   SET A.FAQ_STATUS = 'N'
		 WHERE A.FAQ_STATUS = 'Y'
		   AND A.FAQ_NO = #{ faqNo }
	</update>
</mapper>