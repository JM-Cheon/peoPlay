<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.peoplay.admin.goods.model.dao.AdminGoodsMapper">

	<resultMap id="selectAllGoodsResult" type="AdminGoodsDTO">
		<id column="GOODS_NUMBER" property="goodsNum" />
		<result column="MOVIE_NO2" property="movieNum" />
		<result column="GOODS_NAME" property="goodsName" />
		<result column="GOODS_PRICE" property="goodsPrice" />
		<result column="GOODS_REGISTRATION_DATE" property="goodsRegistrationDate" />
		<result column="GOODS_STOCK" property="goodsStock" />
		<result column="GOODS_STATUS" property="goodsStatus" />
		<result column="GOODS_DETAIL" property="goodsDetail" />
		<result column="GOODS_ORIGIN" property="goodsOrigin" />
		<result column="GOODS_COMPANY" property="goodsCompany" />
		<result column="GOODS_LIKE_COUNT" property="goodsLikeCount" />
		<result column="GOODS_SHORT_INFO" property="goodsShortInfo" />
		<association property="goodsCategoryNum" javaType="AdminGoodsCategoryDTO">
			<id column="GOODS_CATEGORY_NUMBER" property="goodsCategoryNum" />
			<result column="GOODS_CATEGORY_NAME" property="goodsCategoryName" />
		</association> 
		<association property="goodsShipmentClassifyCode" javaType="AdminGoodsShipmentClassifyDTO">
			<id column="GOODS_SHIPMENT_CLAFFIFY_CODE" property="goodsShipmentClassifyCode" />
			<result column="GOODS_SHIPMENT_CLAFFIFY_NAME" property="goodsShipmentClassifyName" />
		</association> 
		<collection property="goodsFiles" ofType="AdminGoodsFileDTO">
			<result column="FILE_SAVE_NAME" property="fileSaveName" />
		</collection> 
	</resultMap>
	
	<select id="selectAdminAllGoods" resultMap="selectAllGoodsResult" parameterType="AdminGoodsDTO">
		SELECT
		       A.GOODS_NUMBER
		     , A.GOODS_CATEGORY_NUMBER
		     , A.MOVIE_NO2
		     , A.GOODS_SHIPMENT_CLAFFIFY_CODE
		     , A.GOODS_NAME
		     , A.GOODS_PRICE
		     , A.GOODS_REGISTRATION_DATE
		     , A.GOODS_STOCK
		     , A.GOODS_STATUS
		     , A.GOODS_DETAIL
		     , A.GOODS_ORIGIN
		     , A.GOODS_COMPANY
		     , A.GOODS_LIKE_COUNT
			 , A.GOODS_SHORT_INFO
			 , B.FILE_SAVE_NAME
		  FROM TBL_GOODS A
		  JOIN TBL_GOODS_FILE B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
		 ORDER BY A.GOODS_NUMBER DESC
	</select>
	
	<select id="selectGoodsInfoByGoodsNo" resultMap="selectGoodsInfoByGoodsNoResult" parameterType="AdminGoodsDTO">
		SELECT
    	       A.GOODS_NUMBER
    	     , A.GOODS_CATEGORY_NUMBER
		     , A.MOVIE_NO2 
		     , A.GOODS_SHIPMENT_CLAFFIFY_CODE
		     , A.GOODS_NAME
			 , A.GOODS_PRICE
		     , A.GOODS_REGISTRATION_DATE
			 , A.GOODS_STOCK
		     , A.GOODS_STATUS
		     , A.GOODS_DETAIL
		     , A.GOODS_ORIGIN
		     , A.GOODS_COMPANY
		     , A.GOODS_LIKE_COUNT
		     , A.GOODS_SHORT_INFO
		     , B.GOODS_CATEGORY_NAME
		  FROM TBL_GOODS A
		  JOIN TBL_GOODS_CATEGORY B ON (A.GOODS_CATEGORY_NUMBER = B.GOODS_CATEGORY_NUMBER)
		 WHERE A.GOODS_NUMBER = #{goodsNo}
	</select>
	
	<resultMap id="selectGoodsInfoByGoodsNoResult" type="AdminGoodsDTO">
		<id column="GOODS_NUMBER" property="goodsNum" />
		<result column="MOVIE_NO2" property="movieNum" />
		<result column="GOODS_NAME" property="goodsName" />
		<result column="GOODS_PRICE" property="goodsPrice" />
		<result column="GOODS_REGISTRATION_DATE" property="goodsRegistrationDate" />
		<result column="GOODS_STOCK" property="goodsStock" />
		<result column="GOODS_STATUS" property="goodsStatus" />
		<result column="GOODS_DETAIL" property="goodsDetail" />
		<result column="GOODS_ORIGIN" property="goodsOrigin" />
		<result column="GOODS_COMPANY" property="goodsCompany" />
		<result column="GOODS_LIKE_COUNT" property="goodsLikeCount" />
		<result column="GOODS_SHORT_INFO" property="goodsShortInfo" />
		<association property="goodsCategoryNum" javaType="AdminGoodsCategoryDTO">
			<id column="GOODS_CATEGORY_NUMBER" property="goodsCategoryNum" />
			<result column="GOODS_CATEGORY_NAME" property="goodsCategoryName" />
		</association> 
		<association property="goodsShipmentClassifyCode" javaType="AdminGoodsShipmentClassifyDTO">
			<id column="GOODS_SHIPMENT_CLAFFIFY_CODE" property="goodsShipmentClassifyCode" />
			<result column="GOODS_SHIPMENT_CLAFFIFY_NAME" property="goodsShipmentClassifyName" />
		</association> 
	</resultMap>
	
	<resultMap id="AdmingoodsAndFileResultMap"  type="AdminGoodsAndFileDTO" >
		<id property="goodsNum" column="GOODS_NUMBER"/>
		<collection property="goodsFile" ofType="AdminGoodsFileDTO">
			<id property="number" column="FILE_NO"/>
			<result property="savePath" column="SAVE_PATH"/>
			<result property="thumbnailPath" column="THUMNAIL_PATH"/>
			<result property="fileOriginName" column="FILE_ORIGIN_NAME"/>
			<result property="fileSaveName" column="FILE_SAVE_NAME"/>
		</collection>
	</resultMap>
	
	<select id="mainGoodsAndFile" resultMap="AdmingoodsAndFileResultMap">
		SELECT
		       A.GOODS_NUMBER
		     , B.FILE_NO
		     , B.SAVE_PATH
		     , B.THUMNAIL_PATH
		     , B.FILE_ORIGIN_NAME
		     , B.FILE_SAVE_NAME
		  FROM TBL_GOODS A
		  JOIN TBL_GOODS_FILE B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
	</select>
	
	<select id="goodsAndFile" resultMap="AdmingoodsAndFileResultMap">
		SELECT
		       A.GOODS_NUMBER
		     , B.FILE_NO
		     , B.SAVE_PATH
		     , B.THUMNAIL_PATH
		     , B.FILE_ORIGIN_NAME
		     , B.FILE_SAVE_NAME
		  FROM TBL_GOODS A
		  JOIN TBL_GOODS_FILE B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
		 WHERE A.GOODS_NUMBER = #{goodsNo}
	</select>
	
	<resultMap id="AdmingoodsDetailFileResultMap"  type="AdminGoodsAndDetailFileDTO" >
		<id property="goodsNum" column="GOODS_NUMBER"/>
		<collection property="detailFiles" ofType="AdminGoodsDetailFileDTO">
			<id property="detailFileNo" column="DETAIL_FILE_NO"/>
			<result property="detailSavePath" column="DETAIL_SAVE_PATH"/>
			<result property="detailThumbnailPath" column="DETAIL_THUMNAIL_PATH"/>
			<result property="detailFileOriginName" column="DETAIL_FILE_ORGIN_NAME"/>
			<result property="detailFileSaveName" column="DETAIL_FILE_SAVE_NAME"/>
		</collection>
	</resultMap>
	
	<select id="goodsAndDetailFile" resultMap="AdmingoodsDetailFileResultMap">
		SELECT
		       A.GOODS_NUMBER
		     , B.DETAIL_FILE_NO
		     , B.DETAIL_SAVE_PATH
		     , B.DETAIL_THUMBNAIL_PATH
		     , B.DETAIL_FILE_ORGIN_NAME
     	     , B.DETAIL_FILE_SAVE_NAME
		  FROM TBL_GOODS A
		  JOIN TBL_GOODS_DETAIL_FILE B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
		 WHERE A.GOODS_NUMBER = #{goodsNo}
	</select>
	<update id="deleteGoods" parameterType="_int">
		UPDATE TBL_GOODS A
		   SET A.GOODS_STATUS = 'N'
		 WHERE A.GOODS_NUMBER = #{goodsNum}
	</update>
	<insert id="insertGoodsinfo">
		INSERT
		  INTO TBL_GOODS A
		(
		  A.GOODS_NUMBER, A.GOODS_CATEGORY_NUMBER, A.MOVIE_NO2
		, A.GOODS_SHIPMENT_CLAFFIFY_CODE, A.GOODS_NAME, A.GOODS_PRICE
		, A.GOODS_REGISTRATION_DATE, A.GOODS_STOCK, A.GOODS_STATUS
		, A.GOODS_DETAIL, A.GOODS_ORIGIN, A.GOODS_COMPANY
		, A.GOODS_SHORT_INFO, A.GOODS_LIKE_COUNT
		)
		VALUES
		(
		  SEQ_TBL_GOODS.NEXTVAL, #{goodsCategory}, 2
		, #{goodsClassifyCode}, #{goodsName}, #{goodsMoney}
		, SYSDATE, #{goodsStock}, 'Y'
		, '상세 설명', #{goodsNationality}, #{goodsCompany}
		, #{goodsShortInfo}, 0
		)
	</insert>
	
	<insert id="insertImageFiles">
		<selectKey keyProperty="goodsNum" order="BEFORE" resultType="_int">
	         SELECT
	                SEQ_TBL_GOODS.CURRVAL
	           FROM DUAL
	     </selectKey>
	     <if test="distinguish == 'head'">
			INSERT INTO TBL_GOODS_FILE A
			(
			  A.FILE_NO, A.GOODS_NUMBER, A.FILE_ORIGIN_NAME
			, A.FILE_SAVE_NAME, A.SAVE_PATH, A.THUMNAIL_PATH
			, A.FILE_TYPE, A.FILE_STATUS
			)
			VALUES
			
			(
			  SEQ_TBL_GOODS_FILE.NEXTVAL, #{goodsNum}, 
			  #{originFileName}, #{saveName}, #{filePath}, #{filePath}
			, 'head', 'Y'
			)
		</if>
		<if test="distinguish == 'body'">
			INSERT INTO TBL_GOODS_FILE A
			(
		      A.FILE_NO, A.GOODS_NUMBER, A.FILE_ORIGIN_NAME
			, A.FILE_SAVE_NAME, A.SAVE_PATH, A.THUMNAIL_PATH
			, A.FILE_TYPE, A.FILE_STATUS
			)
			VALUES
				
			(
			  SEQ_TBL_GOODS_FILE.NEXTVAL, #{goodsNum}
		    , #{originFileName}, #{saveName}, #{filePath}
		    , #{filePath}, 'body', 'Y'
			)
		</if>
	</insert>
	<insert id="goodsDetailFiles">
		INSERT 
		  INTO TBL_GOODS_DETAIL_FILE
		<selectKey keyProperty="goodsNum" order="BEFORE" resultType="_int">
	         SELECT
	                SEQ_TBL_GOODS.CURRVAL
	           FROM DUAL
	     </selectKey>
		
		(
		  DETAIL_FILE_NO, GOODS_NUMBER, DETAIL_FILE_ORGIN_NAME
		, DETAIL_FILE_SAVE_NAME, DETAIL_SAVE_PATH, DETAIL_THUMBNAIL_PATH
		, DETAIL_FILE_TYPE, DETAIL_FILE_STATUS
		)
		VALUES
		(
		  SEQ_TBL_GOODS_DETAIL_FILE.NEXTVAL, #{goodsNum}, #{originFileName}
		, #{saveName}, #{filePath}, #{filePath}
		, 'body', 'Y'
		)
	</insert>
	<select id="goodsCount" resultType="int">
		SELECT
		       COUNT(*)
		  FROM TBL_GOODS
	</select>
	<select id="selectAdminAllGoodsPaging" resultMap="selectAllGoodsResult" parameterType="AdminGoodsDTO">
	    SELECT
		       C.GOODS_NUMBER
		     , C.GOODS_CATEGORY_NUMBER
		     , C.MOVIE_NO2
		     , C.GOODS_SHIPMENT_CLAFFIFY_CODE
		     , C.GOODS_NAME
		     , C.GOODS_PRICE
		     , C.GOODS_REGISTRATION_DATE
		     , C.GOODS_STOCK
		     , C.GOODS_STATUS
		     , C.GOODS_DETAIL
		     , C.GOODS_ORIGIN
		     , C.GOODS_COMPANY
		     , C.GOODS_LIKE_COUNT
			 , C.GOODS_SHORT_INFO
			 , C.FILE_SAVE_NAME
		  FROM (	
				SELECT
				       ROWNUM RNUM
				     , B.GOODS_NUMBER
				     , B.GOODS_CATEGORY_NUMBER
				     , B.MOVIE_NO2
				     , B.GOODS_SHIPMENT_CLAFFIFY_CODE
				     , B.GOODS_NAME
				     , B.GOODS_PRICE
				     , B.GOODS_REGISTRATION_DATE
				     , B.GOODS_STOCK
				     , B.GOODS_STATUS
				     , B.GOODS_DETAIL
				     , B.GOODS_ORIGIN
				     , B.GOODS_COMPANY
				     , B.GOODS_LIKE_COUNT
					 , B.GOODS_SHORT_INFO
					 , B.FILE_SAVE_NAME
				  FROM (	
						SELECT
						       A.GOODS_NUMBER
						     , A.GOODS_CATEGORY_NUMBER
						     , A.MOVIE_NO2
						     , A.GOODS_SHIPMENT_CLAFFIFY_CODE
						     , A.GOODS_NAME
						     , A.GOODS_PRICE
						     , A.GOODS_REGISTRATION_DATE
						     , A.GOODS_STOCK
						     , A.GOODS_STATUS
						     , A.GOODS_DETAIL
						     , A.GOODS_ORIGIN
						     , A.GOODS_COMPANY
						     , A.GOODS_LIKE_COUNT
							 , A.GOODS_SHORT_INFO
							 , D.FILE_SAVE_NAME
						  FROM TBL_GOODS A
						  JOIN TBL_GOODS_FILE D ON (A.GOODS_NUMBER = D.GOODS_NUMBER)
						 WHERE D.FILE_TYPE = 'head'
					     ORDER BY A.GOODS_NUMBER ASC
					   ) B
			   )C
		 WHERE C.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="searchCount" resultType="int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM TBL_GOODS A
         WHERE A.GOODS_PRICE > 0
		<include refid="search"/>
	</select>
	
	<sql id="search">
		<if test="searchCondition == 'latest'">
		   AND GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY GOODS_REGISTRATION_DATE DESC
		</if>
		<if test="searchCondition == 'famous'">
	       AND GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY GOODS_LIKE_COUNT DESC
		 </if>
		<if test="searchCondition == 'price'">
		   AND GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY GOODS_PRICE DESC
		</if>
	</sql>	
	
	<select id="searchlist" resultMap="selectAllGoodsResult" parameterType="hashmap">
	    SELECT
	           C.GOODS_NUMBER
	         , C.GOODS_CATEGORY_NUMBER
	         , C.MOVIE_NO2
	         , C.GOODS_SHIPMENT_CLAFFIFY_CODE
	         , C.GOODS_NAME
	         , C.GOODS_PRICE
		     , C.GOODS_REGISTRATION_DATE
		     , C.GOODS_STOCK
		     , C.GOODS_STATUS
		     , C.GOODS_DETAIL
		     , C.GOODS_ORIGIN
		     , C.GOODS_COMPANY
		     , C.GOODS_LIKE_COUNT
			 , C.GOODS_SHORT_INFO
			 , C.FILE_SAVE_NAME
	  	  FROM (	
			    SELECT
			           ROWNUM RNUM
				     , B.GOODS_NUMBER
				     , B.GOODS_CATEGORY_NUMBER
				     , B.MOVIE_NO2
				     , B.GOODS_SHIPMENT_CLAFFIFY_CODE
				     , B.GOODS_NAME
				     , B.GOODS_PRICE
				     , B.GOODS_REGISTRATION_DATE
				     , B.GOODS_STOCK
				     , B.GOODS_STATUS
				     , B.GOODS_DETAIL
				     , B.GOODS_ORIGIN
				     , B.GOODS_COMPANY
				     , B.GOODS_LIKE_COUNT
					 , B.GOODS_SHORT_INFO
					 , B.FILE_SAVE_NAME
				  FROM (	
						SELECT
						       A.GOODS_NUMBER
						     , A.GOODS_CATEGORY_NUMBER
						     , A.MOVIE_NO2
						     , A.GOODS_SHIPMENT_CLAFFIFY_CODE
						     , A.GOODS_NAME
						     , A.GOODS_PRICE
						     , A.GOODS_REGISTRATION_DATE
						     , A.GOODS_STOCK
						     , A.GOODS_STATUS
						     , A.GOODS_DETAIL
						     , A.GOODS_ORIGIN
						     , A.GOODS_COMPANY
						     , A.GOODS_LIKE_COUNT
							 , A.GOODS_SHORT_INFO
							 , D.FILE_SAVE_NAME
						  FROM TBL_GOODS A
					      JOIN TBL_GOODS_FILE D ON (A.GOODS_NUMBER = D.GOODS_NUMBER)
						 WHERE D.FILE_TYPE = 'head'
	<include refid="search"/>
					  ) B
			  )C
		WHERE C.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<resultMap id="selectAllPaymentResult" type="AdminOrderDTO">
		<id column="ORDER_NUM" property="orderNo" />
		<result column="ORDER_DATE" property="orderDate" />
		<result column="ORDER_COUNT" property="orderCount" />
		<result column="ORDER_CANCEL_OR_NOT" property="orderCancelOrNot" />
		<result column="PAID_OR_NOT" property="paidOrNot" />
		<association property="goodsNo" javaType="AdminGoodsDTO">
			<result column="GOODS_NAME" property="goodsName" />
			<result column="GOODS_PRICE" property="goodsPrice" />
		</association>
		<association property="userNo" javaType="MemberDTO">
			<id column="USER_NO" property="userNo" />
			<result column="USER_NAME" property="userName" />
		</association>  
	</resultMap>
	<select id="paymentList" resultMap="selectAllPaymentResult" parameterType="hashmap">
		SELECT
		       Y.ORDER_NUM
             , Y.ORDER_DATE
             , Y.ORDER_COUNT
             , Y.ORDER_CANCEL_OR_NOT
             , Y.PAID_OR_NOT
             , Y.PAYMENT_PRICE
             , Y.USER_NO
             , Y.USER_NAME
             , Y.GOODS_NAME
             , Y.GOODS_PRICE
		  FROM (
		        SELECT
		               ROWNUM RNUM    
		             , X.ORDER_NUM
                     , X.ORDER_DATE
                     , X.ORDER_COUNT
                     , X.ORDER_CANCEL_OR_NOT
                     , X.PAID_OR_NOT
                     , X.PAYMENT_PRICE
                     , X.USER_NO
                     , X.USER_NAME
                     , X.GOODS_NAME
                     , X.GOODS_PRICE
		          FROM (          
		                SELECT
                               DISTINCT A.ORDER_NUM
		                     , A.ORDER_DATE
		                     , A.ORDER_COUNT
		                     , A.ORDER_CANCEL_OR_NOT
		                     , A.PAID_OR_NOT
                             , B.PAYMENT_PRICE
		                     , C.USER_NO
		                     , C.USER_NAME
		                     , D.GOODS_NAME
		                     , D.GOODS_PRICE
		                  FROM TBL_GOODS_ORDER A
                          LEFT JOIN TBL_PAYMENT B ON (A.ORDER_NUM = B.ORDER_NUM)
		                  JOIN USER_INFO C ON (A.USER_NO = C.USER_NO)
		                  JOIN TBL_GOODS D ON (A.GOODS_NUMBER = D.GOODS_NUMBER)
		                 WHERE A.PAID_OR_NOT = 'Y'
		                 ORDER BY A.ORDER_NUM DESC
		                ) X
		          ) Y
		WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="paymentgoodsCount" resultType="int">
		SELECT
		       COUNT(*)
		  FROM TBL_GOODS_ORDER
	</select>
	
	<select id="searchPaymentCount" resultType="int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM TBL_GOODS_ORDER A
		  LEFT JOIN TBL_PAYMENT B ON (A.ORDER_NUM = B.ORDER_NUM)
          JOIN USER_INFO C ON (A.USER_NO = C.USER_NO)
          JOIN TBL_GOODS D ON (A.GOODS_NUMBER = D.GOODS_NUMBER)
		 WHERE A.PAID_OR_NOT = 'Y'
		<include refid="searchPayment"/>
	</select>
	
	<sql id="searchPayment">
		<if test="searchCondition == 'totalPrice'">
	  	   AND D.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY D.GOODS_PRICE DESC
		</if>
		<if test="searchCondition == 'date'">
		   AND D.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY A.ORDER_DATE DESC
		 </if>
		<if test="searchCondition == 'goodsName'">
		   AND D.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY D.GOODS_NAME DESC
		</if>
	</sql>
	
	<select id="searchPaymentlist" resultMap="selectAllPaymentResult" parameterType="hashmap">
		SELECT
		       Y.ORDER_NUM
             , Y.ORDER_DATE
             , Y.ORDER_COUNT
             , Y.ORDER_CANCEL_OR_NOT
             , Y.PAID_OR_NOT
             , Y.PAYMENT_PRICE
             , Y.USER_NO
             , Y.USER_NAME
             , Y.GOODS_NAME
             , Y.GOODS_PRICE
		  FROM (
		        SELECT
		               ROWNUM RNUM    
		             , X.ORDER_NUM
                     , X.ORDER_DATE
                     , X.ORDER_COUNT
                     , X.ORDER_CANCEL_OR_NOT
                     , X.PAID_OR_NOT
                     , X.PAYMENT_PRICE
                     , X.USER_NO
                     , X.USER_NAME
                     , X.GOODS_NAME
                     , X.GOODS_PRICE
		          FROM (          
		                SELECT
                               DISTINCT  A.ORDER_NUM
		                     , A.ORDER_DATE
		                     , A.ORDER_COUNT
		                     , A.ORDER_CANCEL_OR_NOT
		                     , A.PAID_OR_NOT
                             , B.PAYMENT_PRICE
		                     , C.USER_NO
		                     , C.USER_NAME
		                     , D.GOODS_NAME
		                     , D.GOODS_PRICE
		                  FROM TBL_GOODS_ORDER A
                          LEFT JOIN TBL_PAYMENT B ON (A.ORDER_NUM = B.ORDER_NUM)
		                  JOIN USER_INFO C ON (A.USER_NO = C.USER_NO)
		                  JOIN TBL_GOODS D ON (A.GOODS_NUMBER = D.GOODS_NUMBER)
		                 WHERE A.PAID_OR_NOT = 'Y'
	<include refid="searchPayment"/>
		               ) X
		        ) Y
		WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	<update id="updateGoodsinfo" parameterType="hashmap">
		UPDATE TBL_GOODS A
	       SET A.GOODS_NAME = #{goodsName},
	   	       A.GOODS_PRICE = #{goodsMoney},
	           A.GOODS_STATUS = #{goodsStatus},
	           A.GOODS_COMPANY = #{goodsCompany},
	           A.GOODS_SHORT_INFO = #{goodsShortInfo},
	           A.GOODS_ORIGIN = #{goodsOrigin},
	           A.GOODS_STOCK = A.GOODS_STOCK + #{goodsStock}
	     WHERE GOODS_NUMBER= #{goodsNo}
	</update>
	
	<insert id="updateImageFiles" parameterType="hashmap">
	    <if test="distinguish == 'head'">
		INSERT 
		  INTO TBL_GOODS_FILE A
	    (
		  A.FILE_NO, A.GOODS_NUMBER, A.FILE_ORIGIN_NAME
		, A.FILE_SAVE_NAME, A.SAVE_PATH, A.THUMNAIL_PATH
		, A.FILE_TYPE, A.FILE_STATUS
		)
		VALUES
			
		(
	      SEQ_TBL_GOODS_FILE.NEXTVAL, #{goodsNumber},  #{originFileName}
	    , #{saveName}, #{filePath}, #{filePath}
	    , 'head', 'Y'
		)
		</if>
		<if test="distinguish == 'body'">
		INSERT 
		  INTO TBL_GOODS_FILE A
		(
	      A.FILE_NO, A.GOODS_NUMBER, A.FILE_ORIGIN_NAME
		, A.FILE_SAVE_NAME, A.SAVE_PATH, A.THUMNAIL_PATH
		, A.FILE_TYPE, A.FILE_STATUS
		)
		VALUES
			
		(
		  SEQ_TBL_GOODS_FILE.NEXTVAL, #{goodsNumber}, #{originFileName}
		, #{saveName}, #{filePath}, #{filePath}
	    , 'body', 'Y'
		)
		</if>
	</insert>  
	
	<insert id="updategoodsDetailFiles" parameterType="hashmap">
		INSERT 
		  INTO TBL_GOODS_DETAIL_FILE A
		(
		  A.DETAIL_FILE_NO, A.GOODS_NUMBER, A.DETAIL_FILE_ORGIN_NAME
		, A.DETAIL_FILE_SAVE_NAME, A.DETAIL_SAVE_PATH, A.DETAIL_THUMBNAIL_PATH
		, A.DETAIL_FILE_TYPE, A.DETAIL_FILE_STATUS
		)
		VALUES
		(
		  SEQ_TBL_GOODS_DETAIL_FILE.NEXTVAL, #{goodsNumber}, #{originFileName}
		, #{saveName}, #{filePath}, #{filePath}
		, 'body', 'Y'
		)
	</insert> 
	
	<select id="deliverygoodsCount" resultType="int">
		SELECT
		       COUNT(*)
		  FROM TBL_DELIVERY
	</select>
	
	<resultMap id="selectDeliveryResult" type="AdminDeliveryDTO">
		<id column="DELIVERY_NUMBER" property="deliveryNumber" />
		<association property="paymentNumber" javaType="AdminPaymentDTO">
			<id column="PAYMENT_PRICE" property="paymentPrice" />
		</association> 
		<association property="goodsNum" javaType="AdminGoodsDTO">
			<id column="GOODS_NAME" property="goodsName" />
		</association>
		<association property="userNo" javaType="MemberDTO">
			<id column="USER_NAME" property="userName" />
		</association>
		<association property="shipmentMemoCode" javaType="AdminDeliveryStatusDTO">
			<id column="SHIPMENT_STATUS" property="shipmentStatus" />
		</association>   
		<association property="shipmentCode" javaType="AdminDeliveryMemoDTO">
			<id column="SHIPMENT_MEMO_NAME" property="shipmentMemoName" />
		</association>   
	</resultMap>
	
	<select id="deliveryList" resultMap="selectDeliveryResult" parameterType="hashmap">
	     SELECT
                Y.DELIVERY_NUMBER
              , Y.PAYMENT_PRICE
              , Y.GOODS_NAME
              , Y.USER_NAME
              , Y.SHIPMENT_STATUS
              , Y.SHIPMENT_MEMO_NAME
           FROM (  
                 SELECT
                        ROWNUM RNUM 
	                  , X.DELIVERY_NUMBER
	                  , X.PAYMENT_PRICE
	                  , X.GOODS_NAME
	                  , X.USER_NAME
	                  , X.SHIPMENT_STATUS
                      , X.SHIPMENT_MEMO_NAME
                   FROM (      
                         SELECT
	                            A.DELIVERY_NUMBER
	                          , B.PAYMENT_PRICE
	                          , C.GOODS_NAME
	                          , D.USER_NAME
	                          , E.SHIPMENT_STATUS
	                          , F.SHIPMENT_MEMO_NAME
	                       FROM TBL_DELIVERY A
	                       LEFT JOIN TBL_PAYMENT B ON (A.PAYMENT_NUM = B.PAYMENT_NUM)
	                       LEFT JOIN TBL_GOODS C ON (A.GOODS_NUMBER = C.GOODS_NUMBER)
	                       LEFT JOIN USER_INFO D ON (A.USER_NO = D.USER_NO)
	                       LEFT JOIN TBL_DELIVERY_STATUS E ON (A.SHIPMENT_CODE = E.SHIPMENT_CODE)
	                       LEFT JOIN TBL_DELIVERY_MEMO F ON (A.SHIPMENT_MEMO_CODE = F.SHIPMENT_MEMO_CODE)
	                      ORDER BY A.DELIVERY_NUMBER DESC
	                      )X
	                )Y       
 		    WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow} 
	</select>
	
	<select id="searchDeliveryCount" resultType="int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM TBL_DELIVERY A
	      LEFT JOIN TBL_PAYMENT B ON (A.PAYMENT_NUM = B.PAYMENT_NUM)
	      LEFT JOIN TBL_GOODS C ON (A.GOODS_NUMBER = C.GOODS_NUMBER)
	      LEFT JOIN USER_INFO D ON (A.USER_NO = D.USER_NO)
	      LEFT JOIN TBL_DELIVERY_STATUS E ON (A.SHIPMENT_CODE = E.SHIPMENT_CODE)
	      LEFT JOIN TBL_DELIVERY_MEMO F ON (A.SHIPMENT_MEMO_CODE = F.SHIPMENT_MEMO_CODE)
		 WHERE B.PAYMENT_PRICE > 0
		<include refid="searchDelivery"/>
	</select>
	
	<sql id="searchDelivery">
		<if test="searchCondition == 'deliveryStatus'">
		   AND E.SHIPMENT_STATUS LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY A.DELIVERY_NUMBER DESC
		</if>
		<if test="searchCondition == 'deliveryMemo'">
		   AND F.SHIPMENT_MEMO_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY A.DELIVERY_NUMBER DESC
		 </if>
		<if test="searchCondition == 'goodsName'">
		   AND C.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	     ORDER BY C.GOODS_NAME DESC
		</if>
	</sql>
	
	<select id="searchDeliverylist" resultMap="selectDeliveryResult" parameterType="hashmap">
	     SELECT
                Y.DELIVERY_NUMBER
              , Y.PAYMENT_PRICE
              , Y.GOODS_NAME
              , Y.USER_NAME
              , Y.SHIPMENT_STATUS
              , Y.SHIPMENT_MEMO_NAME
           FROM (  
                 SELECT
                        ROWNUM RNUM 
                      , X.DELIVERY_NUMBER
	                  , X.PAYMENT_PRICE
	                  , X.GOODS_NAME
	                  , X.USER_NAME
	                  , X.SHIPMENT_STATUS
	                  , X.SHIPMENT_MEMO_NAME
                   FROM (      
                         SELECT
	                            A.DELIVERY_NUMBER
	                          , B.PAYMENT_PRICE
	                          , C.GOODS_NAME
	                          , D.USER_NAME
	                          , E.SHIPMENT_STATUS
	                          , F.SHIPMENT_MEMO_NAME
	                       FROM TBL_DELIVERY A
	                       LEFT JOIN TBL_PAYMENT B ON (A.PAYMENT_NUM = B.PAYMENT_NUM)
	                       LEFT JOIN TBL_GOODS C ON (A.GOODS_NUMBER = C.GOODS_NUMBER)
	                       LEFT JOIN USER_INFO D ON (A.USER_NO = D.USER_NO)
	                       LEFT JOIN TBL_DELIVERY_STATUS E ON (A.SHIPMENT_CODE = E.SHIPMENT_CODE)
	                       LEFT JOIN TBL_DELIVERY_MEMO F ON (A.SHIPMENT_MEMO_CODE = F.SHIPMENT_MEMO_CODE)
	                      WHERE B.PAYMENT_PRICE > 0
     	<include refid="searchDelivery"/>
                         )X
                  )Y       
 		WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow} 
	</select>
 	<update id="updateStatus" parameterType="hashmap">
		UPDATE TBL_DELIVERY
	       SET SHIPMENT_CODE = #{status}
	     WHERE DELIVERY_NUMBER= #{deliveryNum}
	</update> 
	
	<!-- <select id="deliveryStatusList" resultMap="selectDeliveryStatusResult" parameterType="_int">
	SELECT
           SHIPMENT_CODE
	  FROM TBL_DELIVERY A      
     WHERE DELIVERY_NUMBER = #{deliveryNum}
	</select> -->
	
	<!-- <resultMap id="selectDeliveryStatusResult" type="AdminDeliveryDTO">
		<result column="SHIPMENT_CODE" property="shipmentCode" />
	</resultMap> -->
	
	<select id="stockgoodsCount" resultType="int">
		SELECT
		       COUNT(*)
		  FROM TBL_GOODS_IN_AND_OUT
	</select>
	
	<select id="inquiryList" resultType="int">
		SELECT
		       COUNT(*)
		  FROM TBL_GOODS_INQUIRY
	</select>
	
	<resultMap id="inquiryListResultMap" type="GoodsInquiryDTO">
		<id column="GOODS_INQUIRY_NO" property="goodsInquiryNo" />
		<result column="GOODS_INQUIRY_CONTENT" property="goodsInquiryContent" />
		<result column="GOODS_CREATION_DATE" property="writtenDate" />
		<result column="GOODS_INQUIRY_YN" property="goodsInquiryYn" />
		<association property="goodsNumber" javaType="GoodsDTO">
			<id column="GOODS_NUMBER" property="goodsNum" />
			<result column="GOODS_NAME" property="goodsName" />
		</association> 
		<association property="userNo" javaType="MemberDTO">
			<id column="USER_NO" property="userNo" />
			<result column="USER_NAME" property="userName" />
		</association>
		<collection property="goodsReply" ofType="GoodsInquiryReplyDTO">
			<id column="GOODS_REPLY_NO" property="goodsreplyNo" />
			<result column="GOODS_REPLY_CONTENT" property="goodsReplyContent"/>
			<result column="GOODS_REPLY_CREATION_DATE" property="goodsReplyCreationDate"/>
		</collection> 
	</resultMap>
	<select id="inquiryListPaging" resultMap="inquiryListResultMap" parameterType="hashmap">
		SELECT
               Y.GOODS_INQUIRY_NO
             , Y.GOODS_INQUIRY_CONTENT
             , Y.GOODS_CREATION_DATE
             , Y.GOODS_INQUIRY_YN
             , Y.GOODS_NAME
             , Y.GOODS_NUMBER
             , Y.USER_NAME
             , Y.USER_NO
             , Y.GOODS_REPLY_CONTENT
		     , Y.GOODS_REPLY_CREATION_DATE
		  FROM (
		        SELECT
		               ROWNUM RNUM    
		             , X.GOODS_INQUIRY_NO
                     , X.GOODS_INQUIRY_CONTENT
                     , X.GOODS_CREATION_DATE
                     , X.GOODS_INQUIRY_YN
                     , X.GOODS_NAME
                     , X.GOODS_NUMBER
                     , X.USER_NAME
                     , X.USER_NO
                     , X.GOODS_REPLY_CONTENT
		             , X.GOODS_REPLY_CREATION_DATE
		          FROM (          
		                SELECT
		                       A.GOODS_INQUIRY_NO
		                     , A.GOODS_INQUIRY_CONTENT
		                     , A.GOODS_CREATION_DATE
		                     , A.GOODS_INQUIRY_YN
		                     , B.GOODS_NAME
                             , B.GOODS_NUMBER
		                     , C.USER_NAME
		                     , C.USER_NO
		                     , D.GOODS_REPLY_NO
		                     , D.GOODS_REPLY_CONTENT
		                     , D.GOODS_REPLY_CREATION_DATE
		                  FROM TBL_GOODS_INQUIRY A
		                  LEFT JOIN TBL_GOODS B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
		                  LEFT JOIN USER_INFO C ON (A.USER_NO = C.USER_NO)
		                  LEFT JOIN TBL_GOODS_INQUIRY_REPLY D ON (A.GOODS_INQUIRY_NO = D.GOODS_INQUIRY_NO)
		                 ORDER BY A.GOODS_INQUIRY_NO DESC
		                ) X
		          ) Y
    WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow} 	
	</select>
	
	<insert id="updateInquiryAnswer" parameterType="hashmap">
		INSERT
          INTO TBL_GOODS_INQUIRY_REPLY A
        (
          A.GOODS_REPLY_NO, A.USER_NO, A.GOODS_INQUIRY_NO
        , A.GOODS_REPLY_CONTENT, A.GOODS_REPLY_CREATION_DATE
        )
        VALUES
        (
          SEQ_TBL_GOODS_INQUIRY_REPLY.NEXTVAL, #{userNo}, #{inquiryReplyNum}
        , #{inquiryAnswer}, SYSDATE
        )
	</insert>
	
	<update id="updateYN" parameterType="_int">
		UPDATE TBL_GOODS_INQUIRY A
		   SET A.GOODS_INQUIRY_YN = 'Y'
	     WHERE A.GOODS_INQUIRY_NO = #{inquiryReplyNum}
	</update>
	
	<resultMap id="selectInquiryReplyResultMap"  type="GoodsInquiryReplyDTO" >
		<id property="goodsreplyNo" column="GOODS_REPLY_NO"/>
		<result property="goodsReplyContent" column="GOODS_REPLY_CONTENT"/>
		<result property="goodsReplyCreationDate" column="GOODS_REPLY_CREATION_DATE"/>
		<association property="goodsinquiryNo" javaType="GoodsInquiryDTO">
			<id column="GOODS_INQUIRY_NO" property="goodsInquiryNo" />
		</association> 
	</resultMap>
	
	<select id="selectInquiryReply" resultMap="selectInquiryReplyResultMap" >
		SELECT
		       A.GOODS_REPLY_NO
		     , A.GOODS_INQUIRY_NO
		     , A.GOODS_REPLY_CONTENT
		     , A.GOODS_REPLY_CREATION_DATE
		  FROM TBL_GOODS_INQUIRY_REPLY A
		  JOIN TBL_GOODS_INQUIRY B ON(A.GOODS_INQUIRY_NO = B.GOODS_INQUIRY_NO) 
		  JOIN TBL_GOODS C ON (B.GOODS_NUMBER = C.GOODS_NUMBER)
	</select>
	
	<update id="resaleGoods" parameterType="_int">
		UPDATE TBL_GOODS
		   SET GOODS_STATUS = 'Y'
	     WHERE GOODS_NUMBER = #{goodsNum}
	</update>
	
	<select id="selectGoodsStock" resultMap="selectAllGoodsResult" parameterType="AdminGoodsDTO">
		SELECT
		       A.GOODS_NUMBER
		     , A.GOODS_NAME
		     , A.GOODS_STOCK
		     , A.GOODS_REGISTRATION_DATE
		  FROM TBL_GOODS A
		 ORDER BY A.GOODS_NUMBER DESC
	</select>
	
	<insert id="insertInitiate" parameterType="GoodsDTO">
		INSERT 
		  INTO TBL_GOODS_IN_AND_OUT A
        (
          A.IN_AND_OUT_CODE, A.GOODS_NUMBER, A.GOOD_IN_OUT_DATE
        , A.GOODS_COUNT, A.IN_AND_OUT_STATUS
        )
        VALUES
        (
          SEQ_TBL_GOODS_IN_AND_OUT.NEXTVAL, #{goodsNum}, #{goodsRegistrationDate}
        , #{goodsStock}, '입고'
        )
	</insert>	
	
	<resultMap id="stockResultMap"  type="GoodsInAndOutDTO" >
		<id property="inAndOutCode" column="IN_AND_OUT_CODE"/>
		<result property="goodsInOutDate" column="GOOD_IN_OUT_DATE"/>
		<result property="goodsCount" column="GOODS_COUNT"/>
		<result property="inAndOutStatus" column="IN_AND_OUT_STATUS"/>
		<association property="goodsNum" javaType="AdminGoodsDTO">
			<id column="GOODS_NUMBER" property="goodsNum" />
			<result property="goodsName" column="GOODS_NAME"/>
		</association>
	</resultMap>
	
	<select id="selectGoodsList" resultMap="stockResultMap" >
		 SELECT
		        Y.IN_AND_OUT_CODE
		      , Y.GOODS_NAME
		      , Y.GOOD_IN_OUT_DATE
		      , Y.GOODS_COUNT
		      , Y.IN_AND_OUT_STATUS           
		   FROM (
		         SELECT
		                ROWNUM RNUM
	                  , X.IN_AND_OUT_CODE
	                  , X.GOODS_NAME
	                  , X.GOOD_IN_OUT_DATE
	                  , X.GOODS_COUNT
	                  , X.IN_AND_OUT_STATUS
	               FROM (
	                     SELECT
	                            A.IN_AND_OUT_CODE
	                          , B.GOODS_NAME
	                          , A.GOOD_IN_OUT_DATE
	                          , A.GOODS_COUNT
	                          , A.IN_AND_OUT_STATUS
	                       FROM TBL_GOODS_IN_AND_OUT A
	                       JOIN TBL_GOODS B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
	                      ORDER BY A.IN_AND_OUT_CODE DESC
	                      ) X
	            )Y
            WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow} 	 
	</select>
	<select id="stockList" resultType="int">
		SELECT
		       COUNT(*)
		  FROM TBL_GOODS_IN_AND_OUT A
	</select>
	
	<select id="searchStockSearch" resultType="int" parameterType="hashmap">
        SELECT
		       COUNT(*)
		  FROM TBL_GOODS_IN_AND_OUT A
		  JOIN TBL_GOODS B ON (A.GOODS_NUMBER = B.GOODS_NUMBER) 
		 WHERE GOODS_COUNT > -1
		<include refid="searchStock"/>
	</select>
	
	<select id="selectStockPaging" resultMap="stockResultMap" >
		 SELECT
		        Y.IN_AND_OUT_CODE
		      , Y.GOODS_NAME
		      , Y.GOOD_IN_OUT_DATE
		      , Y.GOODS_COUNT
		      , Y.IN_AND_OUT_STATUS           
		   FROM (
		         SELECT
		                ROWNUM RNUM
		              , X.IN_AND_OUT_CODE
		              , X.GOODS_NAME
		              , X.GOOD_IN_OUT_DATE
		              , X.GOODS_COUNT
		              , X.IN_AND_OUT_STATUS
		           FROM (
		                 SELECT
		                        A.IN_AND_OUT_CODE
		                      , B.GOODS_NAME
		                      , A.GOOD_IN_OUT_DATE
		                      , A.GOODS_COUNT
		                      , A.IN_AND_OUT_STATUS
		                   FROM TBL_GOODS_IN_AND_OUT A
		                   JOIN TBL_GOODS B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
		                  WHERE GOODS_COUNT > -1
		<include refid="searchStock"/>
		                ) X
		          )Y
	        WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow} 	 
	</select>
	
	<sql id="searchStock">
		<if test="searchCondition == 'in'">
		AND A.IN_AND_OUT_STATUS = '입고'
		AND B.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	  ORDER BY A.IN_AND_OUT_CODE DESC
		</if>
		<if test="searchCondition == 'out'">
		AND A.IN_AND_OUT_STATUS = '출고'
		AND B.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	  ORDER BY A.IN_AND_OUT_CODE DESC
		 </if>
		<if test="searchCondition == 'date'">
		AND B.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	  ORDER BY A.GOOD_IN_OUT_DATE DESC
		</if>
		<if test="searchCondition == 'goodsName'">
		AND B.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	  ORDER BY B.GOODS_NAME DESC
		</if>
	</sql>
	
	<delete id="deletePastImage">
		DELETE
		  FROM TBL_GOODS_FILE A
		 WHERE A.GOODS_NUMBER = #{goodsNo}
	</delete>
	<delete id="deletedetailfile">
		DELETE
		  FROM TBL_GOODS_DETAIL_FILE A
		 WHERE A.GOODS_NUMBER = #{goodsNo}
	</delete>
	
	<insert id="updateStockManage" parameterType="hashmap">
		INSERT 
		  INTO TBL_GOODS_IN_AND_OUT A
        (
          A.IN_AND_OUT_CODE, A.GOODS_NUMBER, A.GOOD_IN_OUT_DATE
        , A.GOODS_COUNT, A.IN_AND_OUT_STATUS
        )
        VALUES
        (
          SEQ_TBL_GOODS_IN_AND_OUT.NEXTVAL, #{goodsNo}, SYSDATE
        , #{goodsStock}, '입고'
        )
	</insert>
	
	<select id="searchInquirySearch" resultType="int" parameterType="hashmap">
		SELECT
		       COUNT(*)
		  FROM TBL_GOODS_INQUIRY A
		  JOIN TBL_GOODS B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
		  JOIN USER_INFO C ON (A.USER_NO = C.USER_NO)
		 WHERE B.GOODS_PRICE > 0
		<include refid="searchInquiry"/>
	</select>
	
	<select id="selectInquiryPaging" resultMap="inquiryListResultMap" parameterType="hashmap">
		SELECT
               Y.GOODS_INQUIRY_NO
             , Y.GOODS_INQUIRY_CONTENT
             , Y.GOODS_CREATION_DATE
             , Y.GOODS_INQUIRY_YN
             , Y.GOODS_NAME
             , Y.GOODS_NUMBER
             , Y.USER_NAME
             , Y.USER_NO
             , Y.GOODS_REPLY_CONTENT
		     , Y.GOODS_REPLY_CREATION_DATE
		  FROM (
		        SELECT
		               ROWNUM RNUM    
		             , X.GOODS_INQUIRY_NO
                     , X.GOODS_INQUIRY_CONTENT
                     , X.GOODS_CREATION_DATE
                     , X.GOODS_INQUIRY_YN
                     , X.GOODS_NAME
                     , X.GOODS_NUMBER
                     , X.USER_NAME
                     , X.USER_NO
                     , X.GOODS_REPLY_CONTENT
		             , X.GOODS_REPLY_CREATION_DATE
		          FROM (          
		                SELECT
		                       A.GOODS_INQUIRY_NO
		                     , A.GOODS_INQUIRY_CONTENT
		                     , A.GOODS_CREATION_DATE
		                     , A.GOODS_INQUIRY_YN
		                     , B.GOODS_NAME
                             , B.GOODS_NUMBER
		                     , C.USER_NAME
		                     , C.USER_NO
		                     , D.GOODS_REPLY_NO
		                     , D.GOODS_REPLY_CONTENT
		                     , D.GOODS_REPLY_CREATION_DATE
		                  FROM TBL_GOODS_INQUIRY A
		                  LEFT JOIN TBL_GOODS B ON (A.GOODS_NUMBER = B.GOODS_NUMBER)
		                  LEFT JOIN USER_INFO C ON (A.USER_NO = C.USER_NO)
		                  LEFT JOIN TBL_GOODS_INQUIRY_REPLY D ON (A.GOODS_INQUIRY_NO = D.GOODS_INQUIRY_NO)
		                 WHERE B.GOODS_PRICE > 0
	<include refid="searchInquiry"/>
		                ) X
		          ) Y
    WHERE Y.RNUM BETWEEN #{startRow} AND #{endRow} 	
	</select>
	
	<sql id="searchInquiry">
		<if test="searchCondition == 'member'">
		AND C.USER_NAME LIKE '%'|| #{searchValue} ||'%'
	  ORDER BY A.GOODS_INQUIRY_NO DESC
		</if>
		<if test="searchCondition == 'question'">
		AND A.GOODS_INQUIRY_CONTENT LIKE '%'|| #{searchValue} ||'%'
	  ORDER BY A.GOODS_INQUIRY_NO DESC
		 </if>
		<if test="searchCondition == 'goodsName'">
		AND B.GOODS_NAME LIKE '%'|| #{searchValue} ||'%'
	  ORDER BY A.GOODS_INQUIRY_NO DESC
		</if>
	</sql>
</mapper>

















